version: 2.1
jobs:
    setup:
        # set up the docker environment
        docker:
            - image: circleci/python:latest # Use the latest python docker.
        steps:
            # Instalation of the required packages:
            - run:
                name: Install pandoc
                command: pip install pandoc --user
            - run:
                name: Install radon
                command: pip install radon --user
            - run:
                name: Install jupyter
                command: pip install jupyter --user
            - run:
                name: Install notebook converter
                command: pip install nbconvert --user
            # Export the .ipynb files to .py:
            - run:
                name: Notebook to scripts
                command: jupyter nbconvert *.ipynb --to script
            # Caches dependencies:
            - save_cache:
                key: memory_hole
                paths:
                    - ~/memory_hole
                    
#    auto-export:
        # convert ALL jupyter notebooks to scripts:
#        docker:
#            - image: circleci/python:latest # Use the latest python docker.
#        steps:
#            - restore_cache:
#                key: memory_hole
#            - run:
#                name: Notebook to scripts
#                command: jupyter nbconvert --to script *.ipynb
                
    auto-test:
        # run tests:
        docker: 
            - image: circleci/python:latest # Use the latest python docker.
        steps:
            - restore_cache:
                key: memory_hole
            - run:
                name: Unit_testing
                command: python test.py
            - run:
                name: Object oriented unit_testing
                command: python objectsTest.py    
                
    auto-radon:
        # Execute automatically radon on your code
        docker:
            - image: circleci/python:latest # Use the latest python docker.
        steps:
            - restore_cache:
                key: memory_hole
            # Cyclomatic complexity
            - run:
                name: Cyclomatic complexity
                command: radon cc solution.py
            - run:
                name: Cyclomatic complexity OOP
                command: radon cc Objects.py
            # Halstead complexity:
            - run:
                name: Halstead complexity
                command: radon hal solution.py
            - run:
                name: Halstead complexity OOP
                command: radon hal Objects.py
                
                
workflows:
  version: 2
  my_workflow:
    jobs:
        - setup
#        - auto-export:
#            requires:
#                - setup
        - auto-test:
            requires:
                - setup
#                - auto-export
        - auto-radon:
            requires:
                - setup
#                - auto-export