version: 2.1

executors:
    director:
        # set up the docker environment
        docker:
            - image: circleci/python:latest # Use the latest python docker.
        # set working directory
        # working_directory: /.

jobs:
    setup:
        executor: director
        steps:
            # Checkout source files:
            - checkout
            # Instalation of the required packages:
            - run:
                name: Install pandoc
                command: pip install pandoc --user
            - run:
                name: Install radon
                command: pip install radon --user
            - run:
                name: Install jupyter
                command: pip install jupyter --user
            - run:
                name: Install notebook converter
                command: pip install nbconvert --user
            # Export the .ipynb files to .py:
            - run:
                name: Notebook to scripts
                command: jupyter nbconvert *.ipynb --to script
            # Dependencies:
            - persist_to_workspace:
                root: workspace
                paths:
                    - test.py
                    - solution.py
                    - objectsTest.py
                    - Objects.py

    auto-test:
        # set working directory
        # working_directory: ~/memory_hole
        # run tests:
        # docker: 
            # - image: circleci/python:latest # Use the latest python docker.
        # Define executor:
        executor: director
        steps:
            - attach_workspace:
                at: workspace
            - run:
                name: Unit_testing
                command: python test.py
            - run:
                name: Object oriented unit_testing
                command: python objectsTest.py    
  
    auto-radon:
        # set working directory
        # working_directory: ~/memory_hole
        # Execute automatically radon on your code
        # docker:
            # - image: circleci/python:latest # Use the latest python docker.
        # Define executor:
        executor: director
        steps:
            - attach_workspace:
                at: workspace
            # Cyclomatic complexity
            - run:
                name: Cyclomatic complexity
                command: radon cc solution.py
            - run:
                name: Cyclomatic complexity OOP
                command: radon cc Objects.py
            # Halstead complexity:
            - run:
                name: Halstead complexity
                command: radon hal solution.py
            - run:
                name: Halstead complexity OOP
                command: radon hal Objects.py


workflows:
  version: 2
  my_workflow:
    jobs:
        - setup
        - auto-test:
            requires:
                - setup
        - auto-radon:
            requires:
                - setup