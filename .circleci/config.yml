version: 2.1

executors:
    director:
        # set up the docker environment
        docker:
            - image: circleci/python:latest # Use the latest python docker.

jobs:
    build:
        executor: director
        
        steps:
            # Checkout source files:
            - checkout
            
            # create cache for python dependencies:
            # - restore_cache:
                # key: v4_dependencies
                
            # Instalation of the required packages:
            - run:
                name: Install Python dependencies
                command: |
                    pip install matplotlib --user
                    pip install jupyter --user
                    pip install nbconvert --user
            # - save_cache:
                # key: v4_dependencies
                # paths:
                    # - "venv"
                    # - "/usr/local/bin"
                    # - "/usr/local/lib/python3.6/site-packages"
                    
            # Export notebooks to script:
            
            # Create file to serve as workspace:
            # - run: mkdir -p workspace
            
            # Export the .ipynb files to .py:
            - run:
                name: Notebook to scripts
                command: jupyter nbconvert *.ipynb --to script
            # Dependencies:
            - persist_to_workspace:
                root: .
                paths:
                    - test.py
                    - solution.py
                    - objectsTest.py
                    - Objects.py
                    
            # Packaging using circleci's artifacts:
            
            - store_artifacts:
                path:
                    - solution.py
                    - Object.py
                destination: solutions
          
            - store_artifacts:
                path: 
                    - test.py
                    - objectsTest.py
                destination: tests

    auto-test:
        # Define executor:
        executor: director
        
        steps:
            # load cache:
            # - restore_cache:
                # key: v4_dependencies   
                
            - attach_workspace:
                at: /home/circleci/project
            - run:
                name: install dependencies
                command: |
                    pip install matplotlib --user
                    pip install numpy --user
                    
            - run:
                name: Unit_testing
                command: python test.py
            - run:
                name: Object oriented unit_testing
                command: python objectsTest.py    
  
    auto-radon:
        # Define executor:
        executor: director

        steps:
            # load cache:
            # - restore_cache:
                # key: v4_dependencies 
                
            - attach_workspace:
                at: /home/circleci/project
            - run:
                name: install dependencies
                command: |
                    pip install radon --user
                    
            # Cyclomatic complexity
            - run:
                name: Cyclomatic complexity
                command: radon cc solution.py
            - run:
                name: Cyclomatic complexity OOP
                command: radon cc Objects.py
            # Halstead complexity:
            - run:
                name: Halstead complexity
                command: radon hal solution.py
            - run:
                name: Halstead complexity OOP
                command: radon hal Objects.py


workflows:
  version: 2
  my_workflow:
    jobs:
        - build
        # - auto-export:
            # requires:
                # - build
        - auto-test:
            requires:
                - build
                # - auto-export
        - auto-radon:
            requires:
                - build
                # - auto-export